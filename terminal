mkdir investment-assistant
cd investment-assistant
mkdir frontend backend

# 2. 设置后端环境
cd backend
python3 -m venv venv
source venv/bin/activate  # 在Windows上使用: venv\Scripts\activate

# 3. 安装必要的Python包
pip install -r requirements.txt

# 4. 创建Django项目
django-admin startproject investment_assistant .
python manage.py startapp stock_api

# 5. 安装Node.js和Yarn
# 首先确保安装了Node.js (如果没有安装的话)
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
source ~/.bashrc  # 或 source ~/.zshrc
nvm install node  # 安装最新版Node.js

# 安装Yarn
npm install -g yarn

# 6. 设置前端环境
cd ../frontend

# 在frontend目录下创建新的UMI项目
cd frontend

# 使用npx创建UMI项目
npx create-umi@latest

# 按照提示选择：
# ? Pick Umi App Template › - Use arrow-keys. Return to submit.
#    Simple App
# ❯  Ant Design Pro
#    Vue Simple App
# 选择 "Ant Design Pro"

# 安装依赖
yarn install

# 安装额外需要的依赖
yarn add @ant-design/charts@1.4.2

# 在backend目录下
python manage.py makemigrations
python manage.py migrate

# 给开发脚本添加执行权限
chmod +x scripts/dev.sh

# 启动开发服务器
./scripts/dev.sh

# 或者分别启动：
# 终端1 - 后端服务
cd backend
source venv/bin/activate
python manage.py runserver

# 终端2 - 前端服务
cd frontend
yarn start